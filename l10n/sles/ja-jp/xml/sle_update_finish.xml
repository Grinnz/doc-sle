<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="sle_update_finish.xml" version="5.0" xml:id="cha-upgrade-finish">
 <title>アップグレードの終了</title>
 <info>
  <abstract>
   <para>
    アップグレード後に、いくつかの追加タスクを実行する必要があります。以下の章では、順を追って手順を説明します。
   </para>
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:translation>yes</dm:translation>
  </dm:docmanager>
 </info>

 <sect1 xml:id="sec-upgrade-finish-old-packages">
  <title>古いパッケージの確認</title>
  <para>
   <command>zypper packages</command>を使用して、孤立したパッケージと不要パッケージを確認します。
  </para>
  <para>
   孤立したパッケージは、任意の設定済みパッケージリポジトリで使用できなくなりました。更新できなくなり、サポートされなくなりました。
  </para>
  <para>
   孤立したパッケージのリストを取得するには、次のコマンドを実行します。
  </para>
<screen><prompt>&gt; </prompt><command>zypper packages --orphaned</command></screen>
  <para>
   不要パッケージとは、ユーザによって明示的にインストールされたか、またはパターンや製品の一部として暗黙的にインストールされ、その間に削除されたパッケージの依存関係です。これらは通常、必要性がなくなり、削除する必要があります。
  </para>
  <para>
   不要パッケージのリストを取得するには、次のコマンドを実行します。
  </para>
<screen><prompt>&gt; </prompt><command>zypper packages --unneeded</command></screen>
  <tip>
   <para>
    不要パッケージを避けるには、<option>--clean-deps</option>オプションを指定して<command>zypper rm</command>を使用するか、<menuchoice>
     <guimenu>オプション</guimenu><guimenu>Clean up when deleting packages (パッケージを削除するときにクリーンアップする)</guimenu></menuchoice>を有効にしてYaSTを使用します。
   </para>
  </tip>
  <para>
   次のコマンドを実行して両方のリストを1つに結合できます。
  </para>
<screen><prompt>&gt; </prompt><command>zypper packages --orphaned --unneeded</command></screen>
  <para>
   これらのリストを使用して、まだ必要なパッケージと、安全に削除できるパッケージを決定します。
  </para>
  <warning>
   <title>必要なパッケージを削除しない</title>
   <para>
    パッケージが名前変更されたり、パターンや製品から削除されたりすると、<command>zypper</command>は、それらがインストールにとって依然として重要であるにもかかわらず、明示的にインストールされたとはみなさなくなり、不要とマークする場合があります。
   </para>
   <para>
    削除するパッケージのリストを注意深く確認してください。
   </para>
  </warning>
  <para>
   1つのコマンドで孤立したパッケージおよび不要パッケージをすべて削除するには、次のコマンドを実行します。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>zypper rm $(zypper --no-refresh packages --orphaned --unneeded | gawk '{print $5}' | tail -n +5)</command></screen>
  <para>
   単一のパッケージまたはパターンをアンインストールから除外します。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>zypper rm $(zypper --no-refresh packages --orphaned --unneeded | gawk '{print $5}' | tail -n +5 | grep -v <replaceable>PACKAGE_TO_EXCLUDE</replaceable>)</command></screen>
  <para>
   テキストファイルで定義されている複数のパッケージを改行で区切って除外します。
  </para>
  <screen><prompt>&gt; </prompt><command>sudo</command> <command>zypper rm $(zypper --no-refresh packages --orphaned --unneeded | gawk '{print $5}' | tail -n +5 | grep -v -f <replaceable>/PACKAGES/TO/KEEP.txt</replaceable>)</command></screen>
 </sect1>
 <sect1 xml:id="sec-uggrade-finish-config-files">
  <title>設定ファイルの確認</title>
  <para>
   <filename>*.rpmnew</filename>ファイルおよび<filename>*.rpmsave</filename>ファイルを確認します。パッケージのインストール後に変更されたデフォルトの設定ファイルの変更がアップグレードに含まれている場合、ファイルを上書きするのではなく、これらのファイルタイプの1つが作成されます。<filename>*.rpmnew</filename>に新しいデフォルトの設定が含まれ、変更されたファイルがそのまま残りますが、<filename>*.rpmsave</filename>は新しいデフォルトファイルによって置き換えられた、変更された設定のコピーです。
  </para>
  <para>
   これらのファイルのいずれかを見つけた場合、その内容を調べ、望ましい変更を統合します。ファイルシステム全体を検索する必要はありません。<filename>/etc</filename>ディレクトリのみ検索します。次のコマンドを実行します。
  </para>
<screen><prompt>&gt; </prompt><command>find /etc/ -name "*.rpmnew" -o -name "*.rpmsave"</command></screen>
 </sect1>

 
 <sect1 xml:id="sec-upgrade-finish-python3">
  <title><literal>Python 3</literal>モジュールを有効にする</title>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 15では、デフォルトでPython 3.6を使用します。<phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 15 SP3では、最新の代替手段としてPython 3.9が追加されました。このバージョンは、<phrase role="productname"><phrase os="sles">SLES</phrase></phrase> 15 SP4ではサポートされなくなりました。代わりに、重要な更新とセキュリティの修正を含む最新のPythonバージョンが<literal>Python 3</literal>モジュールから入手できます。
  </para>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase> 15 SP3にPython 3.9をインストールした場合は、次のコマンドを使用して<literal>Python 3</literal>モジュールを有効にします。
  </para>
<screen><prompt>&gt; </prompt><command>sudo</command> <command>SUSEConnect -p sle-module-python3/15.6/<replaceable>x86_64</replaceable></command>&#x002E;</screen>
  <para>
   または、<command>zypper remove -u python39</command>を使用して3.9を削除して、デフォルトのPythonバージョンに戻すこともできます。
  </para>
 </sect1>

 <sect1 xml:id="sec-upgrade-finish-xfs4">
  <title>XFS v4デバイスを再フォーマットする</title>
  <para>
   <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise Server</phrase></phrase>はXFSファイルシステムの<quote>オンディスクフォーマット</quote>(v5)をサポートしています。このフォーマットの主な利点には、全XFSメタデータの自動チェックサム、ファイルタイプのサポート、および1つのファイルに対する大量のアクセス制御リストのサポートがあります。
  </para>
  <para>
   このフォーマットは、SUSE Linux Enterpriseカーネルの3.12より古いバージョン、<literal>xfsprogs</literal>の3.2.0より古いバージョン、およびSUSE Linux Enterprise 12より前にリリースされたバージョンのGRUB 2ではサポートされていません。
  </para>
  <important>
   <title>V4は非推奨</title>
   <para>
    XFSではV4フォーマットのファイルシステムが非推奨になっています。このファイルシステムフォーマットは次のコマンドで作成されました。
   </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mkfs.xfs -m crc=0 <replaceable>DEVICE</replaceable></screen>
   <para>
    このフォーマットはSLE 11以前のリリースで使用され、現在は<command>dmesg</command>によって警告メッセージが作成されています。
   </para>
<screen>Deprecated V4 format (crc=0) will not be supported after September 2030</screen>
   <para>
    <command>dmesg</command>コマンドの出力に上記のメッセージが表示されたら、ファイルシステムをV5フォーマットに更新することをお勧めします。
   </para>
   <procedure>
    <step>
     <para>
      データを別のデバイスにバックアップします。
     </para>
    </step>
    <step>
     <para>
      そのデバイスにファイルシステムを作成します。
     </para>
<screen><prompt>&gt; </prompt><command>sudo</command> mkfs.xfs -m crc=1 <replaceable>DEVICE</replaceable></screen>
    </step>
    <step>
     <para>
      更新されたデバイスのバックアップからデータを復元します。
     </para>
    </step>
   </procedure>
  </important>
 </sect1>
</chapter>
