<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_expert_partitioner_encryption.xml" version="5.0" xml:id="deployment-encryption" os="sles;sled;osuse">
  <title>Chiffrement du périphérique</title>

  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>

  <para>
    Linux Unified Key Setup (LUKS) est la norme pour le chiffrement de disque Linux. Il fournit un format standard sur disque et permet aux utilisateurs de transporter ou de migrer des données en toute transparence.
  </para>
  <para>
    LUKS est utilisé pour chiffrer les périphériques de bloc. Le contenu du périphérique chiffré est arbitraire. Par conséquent, tout système de fichiers peut être chiffré, y compris les partitions swap. Toutes les informations de configuration nécessaires, telles que les clés et les paramètres de chiffrement, comme le type de chiffrement et la taille de la clé, sont stockées dans l&apos;en-tête de la partition.
  </para>
  <para>
    Le chiffrement est réalisé selon une approche multi-couches. Tout d&apos;abord, le périphérique de bloc est chiffré à l&apos;aide d&apos;une clé maître. Ensuite, cette clé maître est chiffrée avec chaque clé utilisateur active. Les clés utilisateur sont dérivées de phrases secrètes, de clés de sécurité FIDO2, de TPM ou de cartes à puce. Cette approche multi-couches permet aux utilisateurs de changer leur phrase secrète sans rechiffrer l&apos;ensemble du périphérique de bloc.
  </para>
  <para>
    Pour plus d&apos;informations sur LUKS, reportez-vous au <xref linkend="cha-configure-cryptctl"/>.
  </para>

  <sect2 xml:id="deployment-encryption-methods">
    <title>Méthodes de chiffrement</title>
    <para>
      Pour chiffrer un périphérique, suivez les instructions de la <xref linkend="sec-expert-partitioner-options"/>.
    </para>
    <tip>
      <title>activation de la prise en charge de LUKS2 dans YaST</title>
      <para>
        Le chiffrement LUKS2 est pris en charge par le partitionneur YaST à partir de SUSE Linux Enterprise 15 SP4, mais doit être activé explicitement. Vous pouvez effectuer cette tâche de deux manières :
      </para>
      <orderedlist>
        <listitem>
          <para>
            Au moment du démarrage, en ajoutant le paramètre à <literal>YAST_LUKS2_AVAILABLE</literal> dans la ligne de commande du kernel. Pour des informations sur les paramètres de démarrage, reportez-vous au <xref linkend="cha-boot-parameters"/>.
          </para>
        </listitem>
        <listitem>
          <para>
            Lors de l&apos;installation dans la configuration YaST :
          </para>
          <itemizedlist>
            <listitem>
              <para>
                Dans l&apos;interface graphique, appuyez sur <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap>
                  <keycap>Maj</keycap><keycap>C</keycap></keycombo>.
              </para>
            </listitem>
            <listitem>
              <para>
                Dans l&apos;interface de texte, appuyez sur <keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo>, puis sur <keycombo><keycap>Maj</keycap><keycap>C</keycap></keycombo>.
              </para>
            </listitem>
          </itemizedlist>
          <para>
            Cochez l&apos;option <literal>Enable Experimental LUKS2 Encryption Support</literal> et quittez l&apos;écran de configuration avec <literal>OK</literal>.
          </para>
        </listitem>
      </orderedlist>
    </tip>
    <para>
      Si vous n&apos;activez pas la prise en charge de LUKS2, la sélection <guimenu>Méthode de chiffrement</guimenu> n&apos;est pas visible et vous devez uniquement entrer le mot de passe de chiffrement.
    </para>
    <variablelist xml:id="vl-encryption-methods">
      <varlistentry>
        <term><guimenu>LUKS1 classique</guimenu></term>
        <listitem>
          <para>
            Cette méthode permet de chiffrer le périphérique en utilisant LUKS1 (Linux Unified Key Setup). Vous devez fournir le mot de passe de chiffrement. Des mots de passe supplémentaires (jusqu&apos;à huit au total) peuvent être ajoutés ultérieurement avec <command>cryptsetup luksAddKey</command>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>LUKS2 classique</guimenu></term>
        <listitem>
          <para>
            LUKS2 utilise une version plus récente du format d&apos;en-tête, qui résiste à la corruption et prend en charge jusqu&apos;à 32 clés utilisateur et étiquettes de périphérique. Vous devez fournir le mot de passe de chiffrement et la fonction de dérivation de clé basée sur le mot de passe (PBKDF) qui sera utilisée pour protéger cette phrase secrète (voir <xref linkend="deployment-encryption-pbkdf"/>).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>LUKS2 pervasif</guimenu> (uniquement sur IBM Z)</term>
        <listitem>
          <para>
            Cette méthode permet de chiffrer le périphérique en utilisant LUKS2 avec une clé sécurisée maître traitée par un coprocesseur cryptographique Crypto Express configuré en mode CCA. Si le système cryptographique contient déjà une clé sécurisée associée à ce volume, cette clé sera utilisée. Dans le cas contraire, une nouvelle clé sécurisée sera générée et enregistrée sur le système. Vous devez fournir un mot de passe de chiffrement qui sera utilisé pour protéger l&apos;accès à cette clé maître. De plus, en présence de plusieurs APQN sur le système, vous pouvez choisir ceux qu&apos;il faut utiliser.
          </para>
          <para>
            Pour plus d&apos;informations sur le chiffrement pervasif, reportez-vous au document <link xlink:href="https://www.ibm.com/docs/en/linux-on-systems?topic=security-pervasive-encryption"/>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>Chiffrement avec clé aléatoire volatile</guimenu> (uniquement pour les périphériques d&apos;échange)</term>
        <listitem>
          <para>
            Cette méthode chiffre un périphérique d&apos;échange (swap) avec une clé générée de façon aléatoire au démarrage et ne prend donc pas en charge l&apos;hibernation sur le disque dur. Le périphérique d&apos;échange est rechiffré à chaque démarrage et son contenu précédent est détruit. Pour éviter toute perte de données, désactivez l&apos;hibernation et configurez votre système pour qu&apos;à la place, il s&apos;arrête.
          </para>
          <para>
            Outre la clé de chiffrement, l&apos;étiquette du périphérique et l&apos;UUID changent à chaque fois que le périphérique d&apos;échange est rechiffré, de sorte qu&apos;aucune des deux options n&apos;est valide pour monter un périphérique d&apos;échange chiffré de façon aléatoire. Assurez-vous que le périphérique d&apos;échange est référencé par un nom stable qui n&apos;est pas susceptible de changer à chaque redémarrage dans le fichier <filename>/etc/crypttab</filename>. Par exemple, pour une partition d&apos;échange, il est plus sûr d&apos;utiliser l&apos;ID ou le chemin du périphérique udev au lieu du nom de périphérique de la partition, car ce nom de périphérique peut être assigné à une partition différente lors du démarrage suivant. Si cela se produit, un périphérique incorrect peut être chiffré à la place de votre partition d&apos;échange !
          </para>
          <para>
            YaST tente d&apos;utiliser des noms stables dans <filename>/etc/crypttab</filename>, sauf s&apos;il est configuré pour toujours utiliser des noms de périphériques (voir la section <guimenu>Paramètres</guimenu> du partitionneur). Toutefois, pour certains périphériques, il peut être impossible de trouver un nom totalement stable. N&apos;utilisez le chiffrement avec des clés volatiles que si vous êtes sûr des implications.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>Échange protégé</guimenu> (uniquement pour les périphériques d&apos;échange)</term>
        <listitem>
          <para>
            Cette méthode chiffre un périphérique d&apos;échange avec une clé AES protégée volatile sans nécessiter de coprocesseur cryptographique. Il s&apos;agit d&apos;une amélioration de la méthode <literal>Encryption with
              Volatile Random Key</literal> et toutes les considérations relatives à cette méthode restent d&apos;application.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>Échange sécurisé</guimenu> (uniquement pour les périphériques d&apos;échange)</term>
        <listitem>
          <para>
            Cette méthode chiffre un périphérique d&apos;échange avec une clé AES sécurisée volatile générée par un coprocesseur cryptographique. Il s&apos;agit d&apos;une amélioration de la méthode <literal>Encryption with
              Volatile Random Key</literal> et toutes les considérations relatives à cette méthode restent d&apos;application.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>

  <sect2 xml:id="deployment-encryption-pbkdf">
    <title>Fonctions de dérivation de clé basées sur un mot de passe</title>
    <para>
      La fonction de dérivation de clé basée sur un mot de passe (PBKDF) à utiliser dépend du contexte, des capacités matérielles et du niveau de compatibilité requis avec les autres composants du système :
    </para>
    <variablelist xml:id="vl-pbkdf">
      <varlistentry>
        <term>PBKDF2</term>
        <listitem>
          <para>
            <literal>PBKDF2</literal> est la fonction utilisée par LUKS1. Elle est définie dans le document <link xlink:href="https://tools.ietf.org/html/rfc2898">RFC 2898</link>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Argon2i</term>
        <listitem>
          <para>
            Argon2 est une fonction conçue pour être plus sécurisée et nécessite beaucoup de mémoire pour le calcul. Elle est définie dans le document <link xlink:href="https://tools.ietf.org/html/rfc9106">RFC 9106</link>. Argon2i est une variante d&apos;Argon2 optimisée pour la résistance aux attaques par canal secondaire en accédant à la matrice de mémoire dans un ordre indépendant du mot de passe.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Argon2id</term>
        <listitem>
          <para>
            Argon2id est une version hybride d&apos;Argon2. Cette méthode suit l&apos;approche Argon2i pour la première moitié de passage en mémoire et l&apos;approche Argon2d (non prise en charge par YaST) pour limiter les attaques de craquage GPU pour les passages suivants. La RFC 9106 recommande d&apos;utiliser Argon2id si vous ne connaissez pas la différence entre les types ou si vous considérez les attaques par canal secondaire comme une menace viable.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      Bien que <literal>Argon2</literal> soit plus sécurisé, il existe encore des cas d&apos;utilisation pour <literal>PBKDF2</literal> :
    </para>
    <itemizedlist>
      <listitem>
        <para>
          En tant que fonction de sécurité intentionnelle, Argon2 nécessite beaucoup plus de mémoire pour être calculé. Cela peut entraîner des problèmes sur certains systèmes. Si la force du mot de passe peut être entièrement garantie, l&apos;utilisation de PBKDF2 peut rester sécurisée et permettre d&apos;économiser de la mémoire.
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem>grub2</systemitem> offre une prise en charge limitée du démarrage à partir de périphériques chiffrés avec LUKS2, mais uniquement si la méthode PBKDF2 est utilisée. Cela signifie que vous ne pouvez pas utiliser Argon2 pour un système de fichiers qui contient le répertoire <filename>/boot</filename>. Notez que même si PBKDF2 est utilisé, une configuration <systemitem>grub2</systemitem> manuelle peut être nécessaire pour démarrer à partir d&apos;un périphérique LUKS2.
        </para>
      </listitem>
    </itemizedlist>
    
    <para>
      Pour plus d&apos;informations sur la configuration du chiffrement des périphériques avec LUKS, utilisez le bouton <literal>Help</literal> dans le programme d&apos;installation et reportez-vous au <xref linkend="cha-configure-cryptctl"/>.
    </para>
  </sect2>
</sect1>
