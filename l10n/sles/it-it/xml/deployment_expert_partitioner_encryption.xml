<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_expert_partitioner_encryption.xml" version="5.0" xml:id="deployment-encryption" os="sles;sled;osuse">
  <title>Cifratura del dispositivo</title>

  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>

  <para>
    Linux Unified Key Setup (LUKS) è lo standard per la cifratura del disco su Linux. Fornisce un formato su disco standardizzato e consente agli utenti di trasportare o migrare senza alcun problema i dati.
  </para>
  <para>
    LUKS viene utilizzato per cifrare i dispositivi a blocchi. Il contenuto del dispositivo cifrato è arbitrario e pertanto è possibile cifrare qualsiasi file system, comprese le partizioni di swap. Tutte le necessarie informazioni di configurazione, tra cui le chiavi e i parametri di cifratura, come il tipo di cifratura e la dimensione della chiave, vengono archiviate nell&apos;intestazione della partizione.
  </para>
  <para>
    La cifratura viene eseguita secondo un approccio a più livelli. Innanzitutto, il dispositivo a blocchi viene cifrato mediante una chiave master. Successivamente, questa chiave master viene cifrata con ciascuna chiave utente attiva. Le chiavi utente derivano da frasi di accesso, chiavi di sicurezza FIDO2, TPM o smart card. Questo approccio a più livelli consente agli utenti di modificare la propria frase di accesso senza cifrare nuovamente l&apos;intero dispositivo a blocchi.
  </para>
  <para>
    Per ulteriori informazioni su LUKS, fare riferimento a <xref linkend="cha-configure-cryptctl"/>.
  </para>

  <sect2 xml:id="deployment-encryption-methods">
    <title>Metodi di cifratura</title>
    <para>
      Per cifrare un dispositivo, seguire le istruzioni fornite in <xref linkend="sec-expert-partitioner-options"/>.
    </para>
    <tip>
      <title>Abilitazione del supporto LUKS2 in YaST</title>
      <para>
        La cifratura LUKS2 è supportata dal partitioner di YaST a partire da SUSE Linux Enterprise 15 SP4, ma deve essere abilitata esplicitamente. Esistono due modi per eseguire questa operazione:
      </para>
      <orderedlist>
        <listitem>
          <para>
            All&apos;avvio, aggiungendo il parametro <literal>YAST_LUKS2_AVAILABLE</literal> alla riga di comando del kernel. Per informazioni sui parametri di avvio, fare riferimento al <xref linkend="cha-boot-parameters"/>.
          </para>
        </listitem>
        <listitem>
          <para>
            Durante l&apos;installazione nella configurazione di YaST:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                Nell&apos;interfaccia grafica, premere <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap>
                  <keycap>Shift</keycap><keycap>C</keycap></keycombo>.
              </para>
            </listitem>
            <listitem>
              <para>
                Nell&apos;interfaccia di testo, premere <keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo>, quindi <keycombo><keycap>Shift</keycap><keycap>C</keycap></keycombo>.
              </para>
            </listitem>
          </itemizedlist>
          <para>
            Selezionare <literal>Enable Experimental LUKS2 Encryption Support</literal> e uscire dalla schermata di configurazione con <literal>OK</literal>.
          </para>
        </listitem>
      </orderedlist>
    </tip>
    <para>
      Se non si abilita il ​​supporto LUKS2, la selezione del <guimenu>Metodo di cifratura</guimenu> non è visibile e occorre solo immettere la password di cifratura.
    </para>
    <variablelist xml:id="vl-encryption-methods">
      <varlistentry>
        <term><guimenu>LUKS1 normale</guimenu></term>
        <listitem>
          <para>
            Questo metodo consente di cifrare il dispositivo utilizzando LUKS1. È necessario fornire la password di cifratura. In un secondo momento, è possibile aggiungere altre password, fino a otto in totale, con <command>cryptsetup luksAddKey</command>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>LUKS2 normale</guimenu></term>
        <listitem>
          <para>
            LUKS2 utilizza una versione più recente del formato dell&apos;intestazione, resistente al danneggiamento e supporta fino a 32 chiavi utente ed etichette dispositivo. È necessario fornire la password di cifratura e la funzione di derivazione della chiave basata su password (PBKDF) che verrà utilizzata per proteggere la frase di accesso (vedere <xref linkend="deployment-encryption-pbkdf"/>).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>LUKS2 pervasivo</guimenu> (solo su IBM Z)</term>
        <listitem>
          <para>
            Questo metodo consente di cifrare il dispositivo utilizzando LUKS2 con una chiave sicura master elaborata da un coprocessore crittografico Crypto Express configurato in modalità CCA. Se il sistema crittografico contiene già una chiave sicura associata a questo volume, verrà utilizzata tale chiave. Diversamente, verrà generata e registrata nel sistema una nuova chiave sicura. È necessario fornire una password di cifratura che verrà utilizzata per proteggere l&apos;accesso a tale chiave master. Inoltre, se nel sistema sono presenti più APQN, è possibile selezionare quali utilizzare.
          </para>
          <para>
            Per ulteriori informazioni sulla cifratura pervasiva, consultare <link xlink:href="https://www.ibm.com/docs/en/linux-on-systems?topic=security-pervasive-encryption"/>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>Cifratura con chiave casuale volatile</guimenu> (solo per dispositivi di swap)</term>
        <listitem>
          <para>
            Questo metodo consente di cifrare un dispositivo di swap con una chiave generata casualmente all&apos;avvio e pertanto non supporta l&apos;ibernazione sul disco rigido. Il dispositivo di swap viene cifrato di nuovo a ogni avvio e il suo contenuto precedente viene distrutto. Per evitare perdite di dati, disabilitare l&apos;ibernazione e configurare invece lo spegnimento del sistema.
          </para>
          <para>
            Si noti che, oltre alla chiave di cifratura, anche l&apos;etichetta del dispositivo e l&apos;UUID cambiano ogni volta che lo swap viene nuovamente cifrato, pertanto nessuna delle due opzioni è valida per montare un dispositivo di swap cifrato in modo casuale. Assicurarsi che il riferimento al dispositivo di swap nel file <filename>/etc/crypttab</filename> sia un nome stabile non soggetto a modifiche a ogni riavvio. Ad esempio, per una partizione di swap è più sicuro utilizzare l&apos;id dispositivo udev o il percorso al posto del nome del dispositivo della partizione, poiché tale nome dispositivo può essere assegnato a una partizione diversa durante l&apos;avvio successivo. In questo caso, è possibile che venga cifrato un dispositivo errato al posto dello swap.
          </para>
          <para>
            YaST tenta di utilizzare nomi stabili in <filename>/etc/crypttab</filename>, a meno che non sia configurato per utilizzare sempre nomi di dispositivi (vedere la sezione <guimenu>Impostazioni</guimenu> del partitioner). Tuttavia, per alcuni dispositivi potrebbe non essere possibile trovare un nome completamente stabile. Utilizzare la cifratura con chiavi volatili solo se non si è sicuri delle implicazioni.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>Swap protetto</guimenu> (solo per dispositivi di swap)</term>
        <listitem>
          <para>
            Questo metodo codifica un dispositivo di swap con una chiave AES protetta volatile che non richiede un coprocessore crittografico. Si tratta di un miglioramento rispetto al metodo <literal>Encryption with
              Volatile Random Key</literal> e rimangono applicabili tutte le considerazioni a esso associate.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>Swap sicuro</guimenu> (solo per dispositivi di swap)</term>
        <listitem>
          <para>
            Questo metodo codifica un dispositivo di swap con una chiave AES protetta volatile generata da un coprocessore crittografico. Si tratta di un miglioramento rispetto al metodo <literal>Encryption with
              Volatile Random Key</literal> e rimangono applicabili tutte le considerazioni a esso associate.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>

  <sect2 xml:id="deployment-encryption-pbkdf">
    <title>Funzioni di derivazione della chiave basata su password</title>
    <para>
      La funzione di derivazione della chiave basata su password (PBKDF) da usare dipende dal contesto, dalle capacità hardware e dal necessario livello di compatibilità con gli altri componenti del sistema:
    </para>
    <variablelist xml:id="vl-pbkdf">
      <varlistentry>
        <term>PBKDF2</term>
        <listitem>
          <para>
            <literal>PBKDF2</literal> è la funzione utilizzata da LUKS1. È definita in <link xlink:href="https://tools.ietf.org/html/rfc2898">RFC 2898</link>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Argon2i</term>
        <listitem>
          <para>
            Argon2 è una funzione progettata per essere ancora più sicura, la cui elaborazione richiede una notevole quantità di memoria. È definita in <link xlink:href="https://tools.ietf.org/html/rfc9106">RFC 9106</link>. Argon2i è una variante di Argon2, ottimizzata per resistere agli attacchi side-channel grazie all&apos;accesso all&apos;array di memoria in un ordine indipendente dalla password.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Argon2id</term>
        <listitem>
          <para>
            Argon2id è una versione ibrida di Argon2. Segue l&apos;approccio di Argon2i per il primo passaggio in memoria e l&apos;approccio di Argon2d (non supportato da YaST) per limitare gli attacchi di cracking della GPU per i passaggi successivi. RFC 9106 consiglia di utilizzare Argon2id se non si conosce la differenza tra i tipi o si valuta che gli attacchi side-channel rappresentino una possibile minaccia.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      Benché <literal>Argon2</literal> sia più sicuro, vi sono comunque casi d&apos;uso per l&apos;applicazione di <literal>PBKDF2</literal>:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          La quantità notevolmente maggiore di memoria necessaria per l&apos;elaborazione di Argon2 (una funzionalità di sicurezza intenzionale) potrebbe comportare dei problemi su alcuni sistemi. Se è possibile assicurare la complessità della password, l&apos;uso di PBKDF2 potrebbe comunque essere sicuro e consentire di risparmiare memoria.
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem>grub2</systemitem> offre un supporto limitato per l&apos;avvio da dispositivi cifrati con LUKS2, ma solo se si utilizza PBKDF2. Pertanto, non è possibile utilizzare Argon2 per un file system contenente la directory <filename>/boot</filename>. Tenere presente che, anche se si utilizza PBKDF2, potrebbero essere necessarie alcune configurazioni manuali di <systemitem>grub2</systemitem> per l&apos;avvio da un dispositivo LUKS2.
        </para>
      </listitem>
    </itemizedlist>
    
    <para>
      Per ulteriori informazioni sulla configurazione della cifratura del dispositivo con LUKS, utilizzare il pulsante <literal>Help</literal> nel programma di installazione e fare riferimento a <xref linkend="cha-configure-cryptctl"/>.
    </para>
  </sect2>
</sect1>
