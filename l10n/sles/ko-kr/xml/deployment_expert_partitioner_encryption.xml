<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="deployment_expert_partitioner_encryption.xml" version="5.0" xml:id="deployment-encryption" os="sles;sled;osuse">
  <title>장치 암호화</title>

  <info>
    <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
      <dm:bugtracker/>
      <dm:translation>yes</dm:translation>
    </dm:docmanager>
  </info>

  <para>
    LUKS(Linux Unified Key Setup)는 Linux 디스크 암호화를 위한 표준입니다. 표준화된 온디스크 형식을 제공하며 사용자의 원활한 데이터 전송 또는 마이그레이션을 지원합니다.
  </para>
  <para>
    LUKS는 블록 장치를 암호화하는 데 사용됩니다. 암호화된 장치의 컨텐트는 임의적이므로 스왑 파티션을 포함한 모든 파일 시스템을 암호화할 수 있습니다. 암호화 키와 파라미터(예: 암호 유형 및 키 크기)와 같은 필요한 모든 설정 정보는 파티션 헤더에 저장됩니다.
  </para>
  <para>
    암호화는 다계층 접근법으로 수행됩니다. 우선, 마스터 키를 사용하여 블록 장치를 암호화합니다. 그런 다음 이 마스터 키는 각 활성 사용자 키로 암호화됩니다. 사용자 키는 암호, FIDO2 보안 키, TPM 또는 스마트 카드에서 파생됩니다. 이러한 다계층 접근법을 통해 사용자는 전체 블록 장치를 다시 암호화하지 않고도 암호를 변경할 수 있습니다.
  </para>
  <para>
    LUKS에 대한 자세한 내용은 <xref linkend="cha-configure-cryptctl"/>를 참조하십시오.
  </para>

  <sect2 xml:id="deployment-encryption-methods">
    <title>암호화 방법</title>
    <para>
      장치를 암호화하려면 <xref linkend="sec-expert-partitioner-options"/>을 참조하십시오.
    </para>
    <tip>
      <title>YaST에서 LUKS2 지원 활성화</title>
      <para>
        LUKS2 암호화는 SUSE Linux Enterprise 15 SP4부터 YaST 파티션 도구에서 지원되지만, 명시적으로 활성화해야 합니다. 이는 다음 두 가지 방법으로 수행할 수 있습니다.
      </para>
      <orderedlist>
        <listitem>
          <para>
            부팅 시 커널 명령줄에서 <literal>YAST_LUKS2_AVAILABLE</literal>에 파라미터를 추가합니다. 부팅 파라미터에 대한 자세한 내용은 <xref linkend="cha-boot-parameters"/>를 참조하십시오.
          </para>
        </listitem>
        <listitem>
          <para>
            YaST 구성에서 설치 중:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                그래픽 인터페이스에서 <keycombo><keycap>Ctrl</keycap><keycap>Alt</keycap>
                  <keycap>Shift</keycap><keycap>C</keycap></keycombo>를 누릅니다.
              </para>
            </listitem>
            <listitem>
              <para>
                텍스트 인터페이스에서 <keycombo><keycap>Ctrl</keycap><keycap>D</keycap></keycombo>를 누른 다음 <keycombo><keycap>Shift</keycap><keycap>C</keycap></keycombo>를 누릅니다.
              </para>
            </listitem>
          </itemizedlist>
          <para>
            <literal>Enable Experimental LUKS2 Encryption Support</literal>를 선택한 다음 <literal>OK</literal>을 눌러 구성 화면을 종료합니다.
          </para>
        </listitem>
      </orderedlist>
    </tip>
    <para>
      LUKS2 지원을 활성화하지 않으면 <guimenu>암호화 방법</guimenu> 선택 항목이 표시되지 않으며 암호화 비밀번호만 입력하면 됩니다.
    </para>
    <variablelist xml:id="vl-encryption-methods">
      <varlistentry>
        <term><guimenu>일반 LUKS1</guimenu></term>
        <listitem>
          <para>
            이 방법을 사용하면 LUKS1을 사용하여 장치를 암호화할 수 있습니다. 사용자는 암호화 비밀번호를 제공해야 합니다. 비밀번호(최대 총 8개)는 나중에 <command>cryptsetup luksAddKey</command>를 사용하여 추가할 수 있습니다.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>일반 LUKS2</guimenu></term>
        <listitem>
          <para>
            LUKS2는 손상에 대한 복원력이 있는 최신 버전의 헤더 형식을 사용하며 최대 32개의 사용자 키와 장치 레이블을 지원합니다. 암호화 비밀번호와 PBKDF(Password-Based Key Derivation Function: 비밀번호 기반 키 유도 함수)를 제공해야 하며 이는 해당 암호구를 보호하는 데 사용됩니다(<xref linkend="deployment-encryption-pbkdf"/> 참조).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>퍼베이시브 LUKS2</guimenu>(IBM Z에만 해당)</term>
        <listitem>
          <para>
            이 방법을 사용하면 CCA 모드로 구성된 Crypto Express 암호화 보조 프로세서로 마스터 보안 키를 처리하여 LUKS2를 사용해 장치를 암호화할 수 있습니다. 이 볼륨에 연결된 보안 키가 암호화 시스템에 이미 포함되어 있으면 해당 키가 사용됩니다. 그렇지 않은 경우 새 보안 키가 생성되어 시스템에 등록됩니다. 사용자는 해당 마스터 키에 대한 액세스를 보호하기 위해 사용할 암호화 비밀번호를 제공해야 합니다. 또한 시스템에 APQN이 여러 개 있는 경우 사용할 APQN을 선택할 수 있습니다.
          </para>
          <para>
            퍼베이시브 암호화에 대한 자세한 내용은 <link xlink:href="https://www.ibm.com/docs/en/linux-on-systems?topic=security-pervasive-encryption"/> 항목을 참조하십시오.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>휘발성 무작위 키를 사용한 암호화</guimenu>(스왑 장치에만 해당)</term>
        <listitem>
          <para>
            이 방법은 부팅 시 무작위로 생성된 키를 사용하여 스왑 장치를 암호화하므로 하드 디스크에 대한 최대 절전 모드를 지원하지 않습니다. 스왑 장치는 부팅할 때마다 다시 암호화되며 이전 컨텐트는 제거됩니다. 데이터 손실을 방지하려면 최대 절전 모드를 비활성화하고, 대신 시스템을 종료하도록 구성하십시오.
          </para>
          <para>
            암호화 키 외에도 스왑이 재암호화될 때마다 장치 레이블과 UUID가 변경되므로 둘 다 무작위로 암호화된 스왑 장치를 탑재하는 유효한 옵션이 아닙니다. <filename>/etc/crypttab</filename> 파일에서 재부팅할 때마다 변경되지 않는 안정적인 이름으로 스왑 장치가 참조되는지 확인하십시오. 예를 들어, 스왑 파티션의 경우 파티션 장치 이름 대신 udev 장치 ID 또는 경로를 사용하는 것이 더 안전하며 이는 다음 부팅 시 해당 장치의 이름이 다른 파티션에 할당될 수 있기 때문입니다. 그런 경우 스왑 장치가 아닌 잘못된 장치가 암호화될 수 있습니다!
          </para>
          <para>
            항상 장치 이름을 사용하도록 구성하지 않은 한(파티션 도구의 <guimenu>설정</guimenu> 섹션 참조), YaST는 <filename>/etc/crypttab</filename>에서 안정적인 이름을 사용하려고 시도합니다. 그러나 일부 장치의 경우 완전히 안정적인 이름을 찾지 못할 수도 있습니다. 영향이 확실할 경우에만 휘발성 키를 사용한 암호화를 사용하십시오.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>보호 스왑</guimenu>(스왑 장치에만 해당)</term>
        <listitem>
          <para>
            이 방법은 암호화 보조 프로세서를 사용하지 않고 휘발성 보호 AES 키로 스왑 장치를 암호화합니다. 이 방법은 <literal>Encryption with
              Volatile Random Key</literal> 방법보다 개선된 방법이며, 해당 방법에 대한 모든 고려 사항이 여전히 적용됩니다.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>보안 스왑</guimenu>(스왑 장치에만 해당)</term>
        <listitem>
          <para>
            이 방법은 암호화 보조 프로세서에서 생성된 휘발성 보안 AES 키를 사용하여 스왑 장치를 암호화합니다. 이 방법은 <literal>Encryption with
              Volatile Random Key</literal> 방법보다 개선된 방법이며, 해당 방법에 대한 모든 고려 사항이 여전히 적용됩니다.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect2>

  <sect2 xml:id="deployment-encryption-pbkdf">
    <title>비밀번호 기반 키 유도 함수</title>
    <para>
      사용할 PBKDF(비밀번호 기반 키 유도 함수)는 컨텍스트, 하드웨어 기능 및 다른 시스템 구성 요소와의 필요한 호환성 수준에 따라 달라집니다.
    </para>
    <variablelist xml:id="vl-pbkdf">
      <varlistentry>
        <term>PBKDF2</term>
        <listitem>
          <para>
            <literal>PBKDF2</literal>는 LUKS1에서 사용하는 기능입니다. 이 기능에 대해서는 <link xlink:href="https://tools.ietf.org/html/rfc2898">RFC 2898</link>에 정의되어 있습니다.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Argon2i</term>
        <listitem>
          <para>
            Argon2는 보안성을 개선하고 계산하는 데 많은 메모리가 필요하도록 설계된 기능입니다. 이 기능에 대해서는 <link xlink:href="https://tools.ietf.org/html/rfc9106">RFC 9106</link>에 정의되어 있습니다. Argon2i는 비밀번호와 독립적인 순서로 메모리 배열에 액세스하여 사이드 채널 공격에 저항하도록 최적화된 Argon2의 변형입니다.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Argon2id</term>
        <listitem>
          <para>
            Argon2id는 Argon2의 하이브리드 버전입니다. 메모리를 통한 첫 번째 절반 스와이프는 Argon2i의 접근법을 따르고, 이후 스와이프에 대해서는 GPU 해독 공격을 제한하기 위해 Argon2d(YaST에서 지원하지 않음)의 접근법을 따릅니다. RFC 9106에서는 두 유형 간의 차이점을 모르거나 사이드 채널 공격이 실행 가능한 위협이라고 판단되는 경우 Argon2id를 사용할 것을 권장합니다.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
    <para>
      <literal>Argon2</literal>가 더 안전하지만 <literal>PBKDF2</literal>에도 여전히 다음과 같은 사용 사례가 있습니다.
    </para>
    <itemizedlist>
      <listitem>
        <para>
          의도적인 보안 기능으로, Argon2의 경우 연산에 훨씬 더 많은 메모리가 필요합니다. 이로 인해 일부 시스템에서 문제가 발생할 수 있습니다. 비밀번호의 강도를 완전히 보장할 수 있는 경우 PBKDF2를 사용하는 것이 여전히 안전하고 메모리를 절약할 수 있는 방법입니다.
        </para>
      </listitem>
      <listitem>
        <para>
          <systemitem>grub2</systemitem>는 LUKS2로 암호화된 장치에서 부팅할 수 있도록 제한적인 지원을 제공하지만, 이는 PBKDF2를 사용하는 경우에만 지원됩니다. 즉, <filename>/boot</filename> 디렉토리가 포함된 파일 시스템의 경우에는 Argon2를 사용할 수 없습니다. PBKDF2를 사용하는 경우에도 LUKS2 장치에서 부팅하려면 일부 <systemitem>grub2</systemitem> 구성을 수동으로 수행해야 할 수 있습니다.
        </para>
      </listitem>
    </itemizedlist>
    
    <para>
      LUKS로 장치 암호화를 구성하는 방법에 대한 자세한 내용은 설치 프로그램의 <literal>Help</literal> 버튼을 사용하여 <xref linkend="cha-configure-cryptctl"/>를 참조하십시오.
    </para>
  </sect2>
</sect1>
